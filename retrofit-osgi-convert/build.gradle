buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'org.standardout:bnd-platform:1.3.0'
	}
}

apply plugin: 'org.standardout.bnd-platform'

repositories {
	jcenter()
}

platform {

	// Uncomment with proper path to your eclipse installation (necessary for building a p2 updatesite)
	eclipseHome = new File('/home/simon/eclipse/eclipse_baseline')

	// configure proper names for the p2 update site
	categoryId = 'retrofit'
	categoryName = 'retrofit'

	featureId = 'retrofit'
	featureName = 'retrofit osgi'

	// Convert the retrofit artifact to OSGi, make android.os optional and handle the split package problems in OSGi
	bundle('com.squareup.retrofit2:retrofit:2.0.0-beta4'){
		bnd {
			optionalImport 'android.os'
			optionalImport 'android.net'
			instruction 'Export-Package', 'retrofit2;com.squareup.retrofit2.retrofit=split;mandatory:=com.squareup.retrofit2.retrofit, retrofit2.http'
	    	}
	}

	// Convert the retrofit gson converter artifact to OSGi and handle the split package problems in OSGi
	bundle('com.squareup.retrofit2:converter-gson:2.0.0-beta4') {
		bnd{
			instruction 'Require-Bundle', 'com.squareup.retrofit2.retrofit'
			instruction 'Export-Package', 'retrofit2;com.squareup.retrofit2.converter-gson=split;mandatory:=com.squareup.retrofit2.converter-gson, retrofit2.converter.gson'
		}
	}

	// Convert okhttp3 artifact to OSGi without android
	bundle('com.squareup.okhttp3:okhttp:3.1.2') {
		bnd{
			optionalImport 'android.util'
		}
	}

	// You can add other converters similar to the gson converter above...
}

task wrapper(type: Wrapper) {
	gradleVersion = '2.11'
}
